version: '3.4'

services:

  sqlserver:
    image: ${DOCKER_REGISTRY-}mcr.microsoft.com/mssql/server:2017-latest-ubuntu 
    hostname: 'sqlserver'  
    container_name: 'sqlserver'
    environment:  
      ACCEPT_EULA: Y  
      SA_PASSWORD: "Password123"     
    ports:  
      - '1433:1433'
    expose:
      - 1433
    volumes:  
      - /var/container_data/mysql:/var/lib/mysql mysql_image
    deploy:
      placement:
        constraints: [node.role == manager]
  
  rabbitmq:
    image: "rabbitmq:3-management"
    hostname: "rabbit"
    container_name: 'RabbitMq'
    ports:
      - "15672:15672"
      - "5672:5672"
    labels:
      NAME: "rabbitmq"
    volumes:
      - ./rabbitmq-isolated.conf:/etc/rabbitmq/rabbitmq.config
    depends_on:
      - sqlserver

  gateway:
    image: ${DOCKER_REGISTRY-}webapi
    hostname: "gateway"       
    ports:
      - "8050:80"
    build:
      context: .
      dockerfile: Api/WebApi/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq
  monitor:
    image: ${DOCKER_REGISTRY-}monitor
    hostname: "monitor"
    container_name: 'HealtMonitor'
    ports:
      - "8051:80"
    build:
      context: .
      dockerfile: Services/Monitor/Monitor/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq

  template:
    image: ${DOCKER_REGISTRY-}template
    hostname: "template"
    container_name: 'Template'
    ports:
      - "8052:80"
    build:
      context: .
      dockerfile: Services/Template/Template/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq

  importexportapi:
    image: ${DOCKER_REGISTRY-}importexport_api
    hostname: "importexportapi"
    ports:
      - "8053:80"
    build:
      context: .
      dockerfile: Services/ImportExport/ImportExport_Api/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq

  eventstore:
    image: ${DOCKER_REGISTRY-}eventstore
    hostname: "eventstore"    
    ports:
      - "8054:80"
    build:
      context: .
      dockerfile: Services/EventStore/EventStore/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq

  kalendarapi:
    image: ${DOCKER_REGISTRY-}kalendar_api
    hostname: "kalendarapi"       
    ports:
      - "8055:80"
    build:
      context: .
      dockerfile: Services/Kalendar/Kalendar_Api/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq

  udalostapi:
    image: ${DOCKER_REGISTRY-}udalost_api
    hostname: "udalostapi"       
    ports:
      - "8056:80"
    build:
      context: .
      dockerfile: Services/Udalost/Udalost_Api/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq

  dochazkaapi:
    image: ${DOCKER_REGISTRY-}dochazka_api
    hostname: "dochazkaapi"       
    ports:
      - "8057:80"
    build:
      context: .
      dockerfile: Services/Dochazka/Dochazka_Api/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq

  uzivatelapi:
    image: ${DOCKER_REGISTRY-}uzivatel_api
    hostname: "uzivatelapi"       
    ports:
      - "8058:80"
    build:
      context: .
      dockerfile: Services/Uzivatel/Uzivatel_Api/Dockerfile


  pritomnostapi:
    image: ${DOCKER_REGISTRY-}pritomnost_api
    hostname: "pritomnostapi"       
    ports:
      - "8059:80"
    build:
      context: .
      dockerfile: Services/Pritomnost/Pritomnost_Api/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq

  aktivitaapi:
    image: ${DOCKER_REGISTRY-}aktivita_api
    hostname: "aktivitaapi"       
    ports:
      - "8060:80"
    build:
      context: .
      dockerfile: Services/Aktivita/Aktivita_Api/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq

  cinnostapi:
    image: ${DOCKER_REGISTRY-}cinnost_api
    hostname: "cinnostapi"       
    ports:
      - "8061:80"
    build:
      context: .
      dockerfile: Services/Cinnost/Cinnost_Api/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq

  mailsenderapi:
    image: ${DOCKER_REGISTRY-}mailsender_api
    hostname: "mailsenderapi"       
    ports:
      - "8062:80"
    build:
      context: .
      dockerfile: Services/MailSender/MailSender_Api/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq

  mzdyapi:
    image: ${DOCKER_REGISTRY-}mzdy_api
    hostname: "mzdyapi"       
    ports:
      - "8063:80"
    build:
      context: .
      dockerfile: Services/Mzdy/Mzdy_Api/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq

  nastaveniapi:
    image: ${DOCKER_REGISTRY-}nastaveni_api
    hostname: "nastaveniapi"       
    ports:
      - "8064:80"
    build:
      context: .
      dockerfile: Services/Nastaveni/Nastaveni_Api/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq

  opravneniapi:
    image: ${DOCKER_REGISTRY-}opravneni_api
    hostname: "popravneniapi"       
    ports:
      - "8065:80"
    build:
      context: .
      dockerfile: Services/Opravneni/Opravneni_Api/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq
     
  soucastapi:
    image: ${DOCKER_REGISTRY-}soucast_api
    hostname: "soucastapi"       
    ports:
      - "8066:80"
    build:
      context: .
      dockerfile: Services/Soucast/Soucast_Api/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq

  strukturaapi:
    image: ${DOCKER_REGISTRY-}struktura_api
    hostname: "strukturaapi"       
    ports:
      - "8067:80"
    build:
      context: .
      dockerfile: Services/Struktura/Struktura_Api/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq

  ukolapi:
    image: ${DOCKER_REGISTRY-}ukol_api
    hostname: "ukolapi"       
    ports:
      - "8068:80"
    build:
      context: .
      dockerfile: Services/Ukol/Ukol_Api/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq

  vykazapi:
    image: ${DOCKER_REGISTRY-}vykaz_api
    hostname: "vykazapi"       
    ports:
      - "8069:80"
    build:
      context: .
      dockerfile: Services/Vykaz/Vykaz_Api/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq

  kancelarweb:
    image: ${DOCKER_REGISTRY-}kancelarweb
    ports:
      - "85:80"
    build:
      context: .
      dockerfile: Gui/KancelarWeb/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq







       

